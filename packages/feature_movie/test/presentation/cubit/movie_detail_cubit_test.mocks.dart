// Mocks generated by Mockito 5.4.6 from annotations
// in feature_movie/test/presentation/cubit/movie_detail_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/common/failure.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:feature_movie/domain/entities/movie.dart' as _i8;
import 'package:feature_movie/domain/entities/movie_detail.dart' as _i6;
import 'package:feature_movie/domain/usecases/get_movie_detail.dart' as _i3;
import 'package:feature_movie/domain/usecases/get_movie_recommendations.dart'
    as _i7;
import 'package:feature_movie/domain/usecases/get_watchlist_status.dart' as _i9;
import 'package:feature_movie/domain/usecases/remove_watchlist.dart' as _i11;
import 'package:feature_movie/domain/usecases/save_watchlist.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i3.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.MovieDetail>>.value(
                  _FakeEither_0<_i5.Failure, _i6.MovieDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i7.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Movie>>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i8.Movie>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i8.Movie>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i8.Movie>>>);
}

/// A class which mocks [GetWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistStatus extends _i1.Mock
    implements _i9.GetWatchlistStatus {
  MockGetWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i10.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> execute(_i6.MovieDetail? movie) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
              _FakeEither_0<_i5.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i11.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> execute(_i6.MovieDetail? movie) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
              _FakeEither_0<_i5.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
}
