// Mocks generated by Mockito 5.4.6 from annotations
// in feature_tv_series/test/presentation/pages/tv_series_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/common/failure.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:feature_tv_series/domain/entities/tv_series.dart' as _i8;
import 'package:feature_tv_series/domain/entities/tv_series_detail.dart' as _i6;
import 'package:feature_tv_series/domain/usecases/get_tv_series_detail.dart'
    as _i3;
import 'package:feature_tv_series/domain/usecases/get_tv_series_recommendations.dart'
    as _i7;
import 'package:feature_tv_series/domain/usecases/get_watchlist_status_tv_series.dart'
    as _i9;
import 'package:feature_tv_series/domain/usecases/remove_watchlist_tv_series.dart'
    as _i11;
import 'package:feature_tv_series/domain/usecases/save_watchlist_tv_series.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetTvSeriesDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesDetailUseCase extends _i1.Mock
    implements _i3.GetTvSeriesDetailUseCase {
  MockGetTvSeriesDetailUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.TvSeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.TvSeriesDetail>>.value(
                  _FakeEither_0<_i5.Failure, _i6.TvSeriesDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.TvSeriesDetail>>);
}

/// A class which mocks [GetTvSeriesRecommendationsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesRecommendationsUseCase extends _i1.Mock
    implements _i7.GetTvSeriesRecommendationsUseCase {
  MockGetTvSeriesRecommendationsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.TvSeries>>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i8.TvSeries>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i8.TvSeries>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i8.TvSeries>>>);
}

/// A class which mocks [GetWatchlistStatusTvSeriesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistStatusTvSeriesUseCase extends _i1.Mock
    implements _i9.GetWatchlistStatusTvSeriesUseCase {
  MockGetWatchlistStatusTvSeriesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [SaveWatchlistTvSeriesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvSeriesUseCase extends _i1.Mock
    implements _i10.SaveWatchlistTvSeriesUseCase {
  MockSaveWatchlistTvSeriesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> execute(
    _i6.TvSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [tvSeries]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
              _FakeEither_0<_i5.Failure, String>(
                this,
                Invocation.method(#execute, [tvSeries]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTvSeriesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvSeriesUseCase extends _i1.Mock
    implements _i11.RemoveWatchlistTvSeriesUseCase {
  MockRemoveWatchlistTvSeriesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> execute(
    _i6.TvSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [tvSeries]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
              _FakeEither_0<_i5.Failure, String>(
                this,
                Invocation.method(#execute, [tvSeries]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
}
